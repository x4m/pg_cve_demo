FROM ubuntu:jammy as pg12

RUN apt-get update && apt-get install -y --no-install-recommends \
    sudo \
    build-essential \
    cmake \
    clang \
    bison flex git \
    curl \
    lsb-release \
    ca-certificates \
    libssl-dev \
    libreadline-dev \
    cron

WORKDIR /pg12

RUN git clone --single-branch --branch REL_12_3 --depth 1 https://github.com/postgres/postgres

ENV CC=clang

RUN cd postgres && \
    ./configure --prefix=$PWD --enable-depend --build=aarch64-unknown-linux-gnu \
                --without-zlib > /dev/null && \
    make -j12 > /dev/null && \
    make -j12 install > /dev/null

RUN useradd -ms /bin/bash postgres

COPY <<EOF entrypoint.sh
#!/bin/bash
postgres/bin/postgres -D /home/postgres/test_db&
sleep 1
(while :; do postgres/bin/psql -d secret_db -c "ALTER SUBSCRIPTION mysub DISABLE;ALTER SUBSCRIPTION mysub SET (slot_name=NONE);" -c "DROP SUBSCRIPTION IF EXISTS mysub;" -c "DROP TABLE IF EXISTS not_secret_table CASCADE; CREATE TABLE not_secret_table (c text primary key);" -c " CREATE SUBSCRIPTION mysub CONNECTION 'dbname=db1' PUBLICATION pub1 WITH (create_slot = false);"; sleep 1; echo pupupu; done)
EOF
RUN chmod +x entrypoint.sh

USER postgres

RUN postgres/bin/initdb /home/postgres/test_db

RUN echo "host    all             all             0.0.0.0/0            md5">>/home/postgres/test_db/pg_hba.conf
RUN echo "listen_addresses = '*'" >> /home/postgres/test_db/postgresql.conf
RUN echo "wal_level = logical" >> /home/postgres/test_db/postgresql.conf
RUN echo "max_wal_senders = 10" >> /home/postgres/test_db/postgresql.conf
RUN echo "max_replication_slots = 10" >> /home/postgres/test_db/postgresql.conf

FROM pg12 as target
RUN postgres/bin/pg_ctl -D /home/postgres/test_db  -w start && \
    postgres/bin/psql -c "create user user1 password 'password'"  && \
    postgres/bin/psql -c "create database db1" && \
    postgres/bin/psql -c "CREATE TABLE not_secret_table (c text primary key);" db1 && \
    postgres/bin/psql -c "insert into not_secret_table values (1)" db1 && \
    postgres/bin/psql -c "SELECT pg_create_logical_replication_slot('mysub', 'pgoutput');" db1 && \
    postgres/bin/psql -c "create publication pub1 for table not_secret_table;" db1 && \
    postgres/bin/psql -c "grant all on database db1 to user1"  && \
    postgres/bin/psql -c "create database secret_db"  && \
    postgres/bin/psql -c "create table secret_table as select 'flag' as c" secret_db && \
    postgres/bin/pg_ctl -D /home/postgres/test_db -w stop

EXPOSE 5432/tcp

CMD ["/pg12/entrypoint.sh"] 